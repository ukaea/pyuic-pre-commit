[tool.poetry]
name = "pyuicprecommit"
version = "0.1.0"
description = "Pre-commit hook to validate Qt UI files have been generated using pyuic"
authors = ["hsaunders1904"]
readme = "README.md"

[tool.poetry.scripts]
pyuic-pre-commit = 'pyuicprecommit:main_with_exit'

[tool.poetry.dependencies]
python = "^3.10,<3.12"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
black = "^23.9.1"
ruff = "^0.0.292"
mypy = "^1.5.1"

[tool.poetry.group.test.dependencies]
pre-commit = "^3.4.0"
pytest = "^7.4.2"
gitpython = "^3.1.37"
pyside6 = "6.5.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
extend-exclude = "tests/data/*"

[tool.ruff]
line-length = 89
select = [
    "C90", # mccabe
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle-error
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "PTH", # flake8-use-pathlib
    "S", # flake8-bandit
    "UP", # pyupgrade
    "W", # pydocstyle-warning
]

[tool.ruff.per-file-ignores]
"tests/data/*" = ["ALL"]
"tests/**/test_*.py" = [
    # Allow asserts in tests
    "S101",
    # Allow undocumented code in tests
    "D",
]

[tool.ruff.pydocstyle]
convention = "numpy"
